name: tests
on: [ pull_request ]
jobs:
  gradle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup gradle
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Setup gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.6
      - name: Execute Gradle Build
        run: ./gradlew build
      - name: Generate OpenAPI specs
        run: ./gradlew generateOpenApiDocs
      - name: Run OpenAPI Diff
        uses: docker://openapitools/openapi-diff:latest
        with:
          args: --fail-on-incompatible openapi.yaml build/openapi.json --markdown ./openapi-diff-report.md
      - name: Read file content
        id: read-file
        run: |
          echo "::set-output name=content::$(cat openapi-diff-report.md)"
      - name: Create OpenAPI DIff Comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            const prefix = "## OpenAPI difference report\n";
            
            let content = fs.readFileSync('openapi-diff-report.md', 'utf8');
            content = prefix + content;
            core.summary.addRaw(content, true);
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: content
            });
            
            const comments = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            
            const existingComment = comments.data.find(comment => comment.body.startsWith(prefix));
            
            core.info(existingComment)
            
            if (existingComment) {
              await github.rest.issues.updateComment({
                comment_id: existingComment.id,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: content
              });
            } else {
              core.info('No existing comment found. Creating a new one.');
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: content
              });
            }
      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        if: ( github.event_name != 'workflow_dispatch' )
        with:
          paths: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 75
          min-coverage-changed-files: 75
